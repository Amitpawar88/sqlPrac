


// 56


-- Create table: accounts
CREATE TABLE accountr (
    id INT PRIMARY KEY,
    iban VARCHAR(255)
);

-- Create table: transactions
CREATE TABLE transactionr (
    account_id INT,
    dt TIMESTAMP,
    amount DECIMAL(7,2),
    FOREIGN KEY (account_id) REFERENCES accounts(id)
);

-- Insert data into accounts
INSERT INTO accountr (id, iban) VALUES
(1, 'SE48 2961 2087 8112 2835 6438'),
(2, 'BE89 2286 5514 4847'),
(3, 'MU84 HRGV 2047 2584 5774 3195 856J PZ');

-- Insert data into transactions
INSERT INTO transactionr (account_id, dt, amount) VALUES
(2, '2022-09-25 19:24:50', 75.06),
(2, '2022-09-24 03:09:17', 41.10),
(1, '2022-09-19 04:13:17', 65.85),
(3, '2022-09-30 07:18:29', 44.57),
(1, '2022-09-26 01:51:44', 98.93),
(1, '2022-08-28 02:51:04', 60.42),
(1, '2022-08-25 23:25:54', 45.34),
(2, '2022-09-09 11:00:48', 11.05),
(3, '2022-08-25 19:37:02', 53.61),
(2, '2022-09-23 09:44:05', 89.18),
(1, '2022-08-28 19:48:40', 47.60),
(3, '2022-09-12 10:28:10', 96.40),
(3, '2022-10-03 16:49:51', 45.41),
(2, '2022-09-05 16:20:41', 46.78),
(3, '2022-10-03 04:51:29', 50.81),
(1, '2022-09-10 17:31:44', 78.72),
(2, '2022-08-31 21:59:56', 61.09),
(2, '2022-09-14 12:52:13', 20.36),
(1, '2022-09-28 11:05:21', 70.52),
(3, '2022-09-30 09:21:12', 48.00);








SELECT 
a.iban,
Count(*) as total_number,
SUM(t.amount) as total_sum






from 

accountr a

join transactionr t 
on a.id = t.account_id
where EXTRACT (MONTH FROM t.dt::date ) =9

group by a.iban

order by total_sum desc





//  57


-- Create table: clients
CREATE TABLE clientr (
    id SMALLINT PRIMARY KEY,
    mac VARCHAR(17),
    tari DECIMAL(6,5)
);

-- Create table: trac
CREATE TABLE trac (
    client_id SMALLINT,
    dt TIMESTAMP,
    amount INT,
    FOREIGN KEY (client_id) REFERENCES clientr(id)
);



DROP TABLE trac


DROP TABLE clientr
-- Insert data into clients
INSERT INTO clientr (id, mac, tari) VALUES
(1, 'A2-53-FC-0C-3E-B4', 0.00007),
(2, 'DC-80-42-E9-AE-FC', 0.00003),
(3, '3F-9B-A9-2A-B1-7B', 0.00007),
(4, 'D4-6F-E4-AF-47-D5', 0.00004),
(5, 'B9-65-FC-8E-F0-15', 0.00007);

-- Insert data into trac
INSERT INTO trac (client_id, dt, amount) VALUES
(1, '2022-05-22 00:00:00', 9127),
(1, '2022-06-07 00:00:00', 62203),
(1, '2022-06-10 00:00:00', 88227),
(2, '2022-05-31 00:00:00', 99874),
(2, '2022-06-01 00:00:00', 78400),
(2, '2022-06-03 00:00:00', 61106),
(2, '2022-06-12 00:00:00', 20963),
(2, '2022-06-29 00:00:00', 98304),
(2, '2022-07-04 00:00:00', 6626),
(3, '2022-05-22 00:00:00', 8386),
(3, '2022-06-08 00:00:00', 22959),
(3, '2022-07-05 00:00:00', 52096),
(3, '2022-07-14 00:00:00', 70777),
(4, '2022-05-22 00:00:00', 93743),
(5, '2022-05-16 00:00:00', 84660),
(5, '2022-05-28 00:00:00', 63267),
(5, '2022-06-10 00:00:00', 80681),
(5, '2022-06-21 00:00:00', 55460),
(5, '2022-07-04 00:00:00', 91365),
(5, '2022-07-09 00:00:00', 23296);






SELECT 
c.mac,
SUM(t.amount) as total_sum,
ROUND (SUM(t.amount * c.tari),2) as res
  

from clientr c 
join trac t
on 
c.id = t.client_id
where extract (year from t.dt:: date) = 2022
and extract (month from t.dt::date) = 5
group by
c.mac
order by  res desc




// 58


-- Create table: companies
CREATE TABLE companies (
    id SMALLINT PRIMARY KEY,
    name VARCHAR(255),
    address VARCHAR(255),
    phone VARCHAR(255)
);

-- Create table: categories
CREATE TABLE categoriesr (
    company_id SMALLINT,
    name VARCHAR(255),
    review_rating SMALLINT,
    FOREIGN KEY (company_id) REFERENCES companies(id)
);

-- Insert data into companies
INSERT INTO companies (id, name, address, phone) VALUES
(1, 'Casper, Oberbrunner and Williamson', '53 Di Loreto Hill', '+420 (569) 566-3689'),
(2, 'Tromp, Kozey and Abbott', '84 Mcguire Plaza', '+62 (145) 722-2330'),
(3, 'Gerlach, Hayes and Stamm', '80 Service Point', '+86 (731) 234-4119'),
(4, 'Wol-Fadel', '06 Fair Oaks Trail', '+7 (894) 233-0976'),
(5, 'Kihn-Cronin', '483 Nobel Road', '+1 (396) 693-1661');

-- Insert data into categories
INSERT INTO categoriesr (company_id, name, review_rating) VALUES
(1, 'HVAC', 2),
(2, 'HVAC', 2),
(2, 'Retaining Wall and Brick Pavers', 1),
(2, 'Rebar & Wire Mesh Install', 2),
(3, 'Prefabricated Aluminum Metal Canopies', 2),
(3, 'Prefabricated Aluminum Metal Canopies', 0),
(3, 'RF Shielding', 2),
(3, 'Overhead Doors', 0),
(3, 'Rebar & Wire Mesh Install', 5),
(3, 'Termite Control', 0),
(4, 'Sitework & Site Utilities', 0),
(4, 'Electrical and Fire Alarm', 2),
(4, 'Masonry', 2),
(4, 'Temp Fencing, Decorative Fencing and Gates', 0),
(4, 'Elevator', 1),
(4, 'Drywall & Acoustical (FED)', 5),
(5, 'Asphalt Paving', 0),
(5, 'Glass & Glazing', 1),
(5, 'Framing (Steel)', 3),
(5, 'Structural & Misc Steel Erection', 1);



SELECT 

c.name,
c.address,
c.phone,
ROUND(AVG(r.review_rating),1) 
 || ' ('  || COUNT (*) || ' categories)'    as overall 

FROM 


companies c
 join 
 categoriesr r
  on c.id = r.company_id

  group by 
  c.name,
c.address,
c.phone
order by  AVG(r.review_rating) desc

  


// 59


-- Create table: accounts
CREATE TABLE accountt (
    id SMALLINT PRIMARY KEY,
    username VARCHAR(255),
    is_active SMALLINT CHECK (is_active IN (0,1))
);

-- Create table: domains
CREATE TABLE domains (
    account_id SMALLINT,
    name VARCHAR(255),
    expiration_date DATE,
    FOREIGN KEY (account_id) REFERENCES accountt(id)
);

-- Insert data into accounts
INSERT INTO accountt(id, username, is_active) VALUES
(1, 'obeedie0', 0),
(2, 'stopham1', 1),
(3, 'ndolder2', 1),
(4, 'jyanshinov3', 1),
(5, 'ewilinger4', 0);

-- Insert data into domains
INSERT INTO domains (account_id, name, expiration_date) VALUES
(1, 'imgur.com', '2022-05-14'),
(1, 'domainmarket.com', '2022-07-02'),
(1, 'comsenz.com', '2022-07-28'),
(1, 'gizmodo.com', '2022-08-09'),
(1, 'toplist.cz', '2022-08-15'),
(1, 'scienticamerican.com', '2022-09-03'),
(1, 'examiner.com', '2022-12-18'),
(1, 'photobucket.com', '2023-01-22'),
(2, 'merriam-webster.com', '2022-02-20'),
(2, 'tripod.com', '2022-08-08'),
(3, 'ca.gov', '2022-04-24'),
(3, 'ehow.com', '2022-06-28'),
(3, 'purevolume.com', '2022-07-01'),
(3, 'squidoo.com', '2022-10-27'),
(3, 'eepurl.com', '2022-12-21'),
(4, 'digg.com', '2022-05-14'),
(4, 'jugem.jp', '2022-08-05'),
(4, 'artisteer.com', '2022-10-21'),
(5, 'behance.net', '2022-03-24'),
(5, 'cnn.com', '2022-05-11');







SELECT 
a.username,
COUNT(*),

SELECT (
d.expiration_date
FROM 
domains 
on a.id = d.account_id
where
ABS(MIN(d.expiration_date - make_date(2022,07,15))) 
group by d.expiration_date
)
-- ABS(MIN(d.expiration_date - make_date(2022,07,15))) 



from 
accountt a 
join domains d 
on a.id = d.account_id
where a.is_active = 1
and d.expiration_date > make_date(2022,07,15)
group by a.username 





SELECT 
    a.username,
    COUNT(*) AS total_domains,
    MIN(d.expiration_date) AS nearest_expiration_date
FROM accountt a
JOIN domains d 
    ON a.id = d.account_id
WHERE a.is_active = 1
  AND d.expiration_date > make_date(2022, 7, 15)
GROUP BY a.username
ORDER BY a.username;


